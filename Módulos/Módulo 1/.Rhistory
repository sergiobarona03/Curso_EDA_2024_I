cars
cars$speed
\item{Crear una función que, si la entrada es un vector numérico, la salida sea la media, la desviación estándar, la mediana, el percentil 25 y 75. (Para la salida use una lista). }
swirl
library(swirl)
install.
install.packages("swirl")
swirl()
library(swirl)
swirl()
5 + 7
x <- 5 + 7
exit
12
x
x
exit()
swirl()
swirl_exit()
swirl()
swirl()
0
0
S
5+7
swirl_options()
info()
bye()
typeof(num) # tipo
#### Crear un vector usando secuencias
num <- 50:54
class(num)
typeof(num)
#### Crear un vector
text <- c("x", "y", "z")
class(text)
typeof(text)
class(num) # tipo
names(num) <- c("uno", "dos", "tres",
"cuatro", "cinco") # asignar nombres
#### Aritmética con vectores (ejecución por elementos)
v1 <- c(2,3,5,7,11, 13)
v2 <- c(2,4,6,8,10,12)
v1*v2
v1+v2
# ejecución por elementos con distinta dimesión
# cuando la longitud de v2 es múltiplo de la longitud de v1
v2 <- c(1,2,3)
v1*v2
v1+v2
#### Construcción de patrones
seq1 <- seq(1, 20, by = 2)
rep1 <- rep(8,12)
#### Los vectores pueden ser concatenados usando c()
v2 <- c(num, 2:40)
##### Crear factores
gender <- factor(c("male", "female", "female", "female"))
# Recodificar niveles
gender.recod <- factor(gender,
levels = c("male", "female"),
labels = c("M", "F"))
# Crear según columnas (default)
m1 <- matrix(c(1,2,4,6,7,4,1,3,2),nrow = 3, ncol = 3, byrow = F)
# Crear según filas
m2 <- matrix(1:9, nrow = 3, ncol = 3, byrow = T)
# Seleccionar entradas
m1[2,1] # entrada (2,1)
m1[2,]  #  fila 2
m1[,1]  #  columna 1
# Descartar entradas
m1[-2,] # fila 2
m1[,-1] # columna 1
m1[-2,-1] # ambas
# Agregar filas o columnas
rbind(m1,m2)
cbind(m1,m2)
# Verificar dimensión
dim(m1)
nrow(m1)
ncol(m1)
# Extraer diagonal
diag(m1)
class(m1)
typeof(m1)
# Creemos un data frame a partir de los siguientes vectores
id <- 1:4
sexo <- c("M", "M", "F", "F")
edad <- c(15, 26, 43, 56)
df <- data.frame(id, sexo, edad)
typeof(df)
df <- data.frame(id, sexo, edad)
df
typeof(df)
class(df)
mode(df)
c(2.4,12.4,2.4)
x = c(2.4,12.4,2.4)
class(x)
typeof(x)
# Nota: la clase del vector también se puede verificar usando:
is.numeric(num)
# Nota: la clase del vector también se puede verificar usando:
is.numeric(num)   # TRUE
is.character(num) # FALSE
is.matrix(num)
is.data.frame(num)
# Y para convertir los objetos a otras clases:
as.numeric(num)
as.character(num)
as.factor(num)
as.matrix(num)
as.data.frame(num)
# Pedir ayuda sobre una función
?filter
# Pedir ayuda sobre una función
?dplyr::filter
?dplyr:filter
# Pedir ayuda sobre una función
?filter
?dplyr:filter
# Pedir ayuda sobre una función
?filter
?dplyr::filter
help(filter)
help(dplyr::filter)
help(dplyr::filter)
help(filter)
help("filter", package = "dplyr")
