df = data.frame(matrix(NA, nrow = 11, ncol = 11))
df
df = data.frame(matrix(NA, nrow = 11, ncol = 11))
colnames(df) = c("edu","parent",
"sexo", "posic", "estable", "medio", "sintrab",
"cotiza_fondo", "arl", "caja",
"actividad")
rownames(df) = c("edu","parent",
"sexo", "posic", "estable", "medio", "sintrab",
"cotiza_fondo", "arl", "caja",
"actividad")
melt(df)
reshape2::melt(df)
df = data.frame(matrix(NA, nrow = 11, ncol = 11))
colnames(df) = c("edu","parent",
"sexo", "posic", "estable", "medio", "sintrab",
"cotiza_fondo", "arl", "caja",
"actividad")
df$var = c("edu","parent",
"sexo", "posic", "estable", "medio", "sintrab",
"cotiza_fondo", "arl", "caja",
"actividad")
reshape2::melt(df, id.vars = "var")
df2 = reshape2::melt(df, id.vars = "var")
df2 = reshape2::melt(df, id.vars = "var") %>% select(var, variable) %>%
rename(var = V1, variable = V2)
library(dplyr)
df2 = reshape2::melt(df, id.vars = "var") %>% select(var, variable) %>%
rename(var = V1, variable = V2)
df2 = reshape2::melt(df, id.vars = "var") %>% select(var, variable) %>%
rename(V1 = var, V2 = variable)
df2
df2 = reshape2::melt(df, id.vars = "var") %>% select(var, variable) %>%
rename(V1 = var, V2 = variable) %>% mutate(st = NA,
df = NA,
p = NA)
df2
chi_2 = reshape2::melt(df, id.vars = "var") %>% select(var, variable) %>%
rename(V1 = var, V2 = variable) %>% mutate(st = NA,
df = NA,
p = NA)
# Caso generalizado
for (k in 1:nrow(chi_2)) {
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = data[c("id", var_1, var_2)]
colnames(chi_2_aux) = c("id", "var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = chi_2_test_aux$statistic
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = round(chi_2_test_aux$p.value, 6)
}
k = 1
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = data[c("id", var_1, var_2)]
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
var_1
var_2
chi_2 = reshape2::melt(df, id.vars = "var") %>% select(var, variable) %>%
rename(V1 = var, V2 = variable) %>% mutate(st = NA,
df = NA,
p = NA)
View(chi_2)
chi_2$V2[k]
chi_2$V2 = as.character(chi_2$V2)
k = 1
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = data[c("id", var_1, var_2)]
var_2
k = 1
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = data[c(var_1, var_2)]
chi_2_aux = data[c(var_1, var_2)]
chi_2_aux = dataset[c(var_1, var_2)]
#----------------------#
# Cargar base de datos #-------------------------------------------------------------------------------------------------------------------------
#----------------------#
setwd("C:/Users/PC/Desktop/Curso_EDA_2024_I")
dataset <- readxl::read_excel("Datos/Formatos/geih_dataset.xlsx")
#----------------------#
# Cargar base de datos #-------------------------------------------------------------------------------------------------------------------------
#----------------------#
setwd("C:/Users/Portatil/Desktop/Curso_EDA_2024_I")
dataset <- readxl::read_excel("Datos/Formatos/geih_dataset.xlsx")
k = 1
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = chi_2_test_aux$statistic
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = round(chi_2_test_aux$p.value, 6)
chi_2
# Caso generalizado
for (k in 1:nrow(chi_2)) {
k = 1
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = chi_2_test_aux$statistic
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = as.character(round(chi_2_test_aux$p.value, 3))
}
View(chi_2)
# Caso generalizado
for (k in 1:nrow(chi_2)) {
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = chi_2_test_aux$statistic
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = as.character(round(chi_2_test_aux$p.value, 3))
}
# Caso generalizado
for (k in 1:nrow(chi_2)) {
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = chi_2_test_aux$statistic
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = as.numeric(round(chi_2_test_aux$p.value, 3))
}
chi_2$p[chi_2$p < 0.001] = "< 0.001"
# Caso generalizado
for (k in 1:nrow(chi_2)) {
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = round(chi_2_test_aux$statistic,2)
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = as.numeric(round(chi_2_test_aux$p.value, 3))
}
??chisq.test
for (k in 1:nrow(chi_2)) {
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2,
simulate.p.value = T)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = round(chi_2_test_aux$statistic,2)
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = as.numeric(round(chi_2_test_aux$p.value, 3))
}
chi_2$p[chi_2$p < 0.001] = "< 0.001"
# Caso generalizado
for (k in 1:nrow(chi_2)) {
print(paste0(k, " de ", nrow(chi_2)))
var_1 = chi_2$V1[k]
var_2 = chi_2$V2[k]
chi_2_aux = dataset[c(var_1, var_2)]
colnames(chi_2_aux) = c("var_1", "var_2")
chi_2_aux$var_1 = as.factor(chi_2_aux$var_1)
chi_2_aux$var_2 = as.factor(chi_2_aux$var_2)
chi_2_test_aux = chisq.test(chi_2_aux$var_1, chi_2_aux$var_2,
simulate.p.value = T)
n_row = which(chi_2$V1 == var_1 & chi_2$V2 == var_2)
chi_2$st[n_row] = round(chi_2_test_aux$statistic,2)
chi_2$df[n_row] = chi_2_test_aux$parameter
chi_2$p[n_row] = as.numeric(round(chi_2_test_aux$p.value, 3))
}
chi_2$p[chi_2$p < 0.001] = "< 0.001"
chi_2
chi_2$value <- paste0(chi_2$st," (",chi_2$p,")")
chi_2
dcast(chi_2, .~ value)
reshape2::dcast(chi_2, .~ value)
x = reshape2::dcast(chi_2, .~ value)
View(x)
colnames(chi_2)
x = reshape2::dcast(chi_2[c("V1", "V2", "value")],
var_1~ value)
x
x = reshape2::dcast(chi_2[c("V1", "V2", "value")],
V1~ value)
X
x
View(z)
View(x)
x = reshape2::dcast(chi_2[c("V1", "V2", "value")],
V1 + V2 ~ value)
x
View(x)
x = reshape2::dcast(chi_2[c("V1", "V2", "value")],
~ value)
x = reshape2::dcast(chi_2[c("V1", "V2", "value")],
.~ value)
View(x)
SN = c(1:100, 1:100, 1:100, 1:100)
class = c(rep("A1", 100), rep("B2", 100), rep("C3", 100), rep("D4", 100)) # total 6000 levels
myvar = rnorm(400)
mydf = data.frame(SN, class, myvar)
mydf
x = reshape2::dcast(chi_2[c("V1", "V2", "value")],
V1 ~ V2)
x
View(x)
