outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
~ quantile_f(.x))) %>% t()
outliers_summary
outliers_summary$Variable = rownames(outliers_summary)
# Resumen descriptivo total
outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
~ quantile_f(.x))) %>% t()
out_summary <- data.freme(Variable = rownames(outliers_summary))
out_summary <- data.frame(Variable = rownames(outliers_summary))
out_summary <- data.frame(Variable = rownames(outliers_summary),
Total = outliers_summary[,1])
no.outliers_summary <- out_summary
for (k in 1:5) {
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 2.5)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c(colnames(df_1)[1], "group")
q1 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.25)
q2 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.5)
q3 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.75)
no.outliers_summary$Variable[k] = names(df_1)[1]
no.outliers_summary$Total[k] = paste0(round(q2, 2), " (",
round(q1, 2), " - ",
round(q3, 2), ")")
}
colnames(outliers_summary) = c("Variable", "Baseline")
colnames(no.outliers_summary) = c("Variable", "No.Outliers")
whole_summary = merge(outliers_summary,
no.outliers_summary, by = "Variable")
# Resumen descriptivo total
outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
~ quantile_f(.x))) %>% t()
out_summary <- data.frame(Variable = rownames(outliers_summary),
Total = outliers_summary[,1])
no.outliers_summary <- out_summary
for (k in 1:5) {
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 2.5)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c(colnames(df_1)[1], "group")
q1 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.25)
q2 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.5)
q3 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.75)
no.outliers_summary$Variable[k] = names(df_1)[1]
no.outliers_summary$Total[k] = paste0(round(q2, 2), " (",
round(q1, 2), " - ",
round(q3, 2), ")")
}
no.outliers_summary
colnames(out_summary) = c("Variable", "Baseline")
colnames(no.outliers_summary) = c("Variable", "No.Outliers")
whole_summary = merge(out_summary,
no.outliers_summary, by = "Variable")
whole_summary
kable(whole_summary, col.names = c("Baseline", "No-outliers"))
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
~ quantile_f(.x))) %>% t()
out_summary <- data.frame(Variable = rownames(outliers_summary),
Total = outliers_summary[,1])
no.outliers_summary <- out_summary
for (k in 1:5) {
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 2.5)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c(colnames(df_1)[1], "group")
q1 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.25)
q2 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.5)
q3 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.75)
no.outliers_summary$Variable[k] = names(df_1)[1]
no.outliers_summary$Total[k] = paste0(round(q2, 2), " (",
round(q1, 2), " - ",
round(q3, 2), ")")
}
colnames(out_summary) = c("Variable", "Baseline")
colnames(no.outliers_summary) = c("Variable", "No.Outliers")
whole_summary = merge(out_summary,
no.outliers_summary, by = "Variable")
whole_summary$Variable = c("Edad", "Horas (semana)",
"Ingreso laboral",
"Tiempo actual",
"Tiempo de viaje")
kable(as.data.frame(whole_summary), format = "latex",
booktabs = T, col.names = c("Baseline", "No-outliers"))
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
~ quantile_f(.x))) %>% t()
out_summary <- data.frame(Variable = rownames(outliers_summary),
Total = outliers_summary[,1])
no.outliers_summary <- out_summary
for (k in 1:5) {
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c(colnames(df_1)[1], "group")
q1 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.25)
q2 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.5)
q3 = quantile(as.vector(df_2[,1])[[1]], na.rm = T, 0.75)
no.outliers_summary$Variable[k] = names(df_1)[1]
no.outliers_summary$Total[k] = paste0(round(q2, 2), " (",
round(q1, 2), " - ",
round(q3, 2), ")")
}
colnames(out_summary) = c("Variable", "Baseline")
colnames(no.outliers_summary) = c("Variable", "No.Outliers")
whole_summary = merge(out_summary,
no.outliers_summary, by = "Variable")
whole_summary$Variable = c("Edad", "Horas (semana)",
"Ingreso laboral",
"Tiempo actual",
"Tiempo de viaje")
kable(as.data.frame(whole_summary), format = "latex",
booktabs = T, col.names = c(" ", "Baseline", "No-outliers"))
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
~ quantile_f(.x))) %>% t()
out_summary <- data.frame(Variable = rownames(outliers_summary),
Total = outliers_summary[,1])
no.outliers_summary <- out_summary
out_summary
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
sd = sd)) %>% t()
outliers_summary <- dataset %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(),
list(mean = mean,
sd = sd))) %>% t()
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
dataset_continuas
melt_continuas <- melt(dataset_continuas)
melt_continuas
outliers_summary <- dataset_continuas %>% dplyr::group_by(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(), list(mean = mean, sd = sd)))
outliers_summary <- dataset_continuas %>% dplyr::select(ingreso2,
edad, horas_semana,
t_actual, t_viaje) %>%
summarise(across(everything(), list(mean = mean, sd = sd)))
outliers_summary <- dataset_continuas  %>%
summarise(across(everything(), list(mean = mean, sd = sd)))
outliers_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(mean = mean, sd = sd)))
outliers_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(mean = mean)))
outliers_summary
outliers_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(mean = mean(na.rm = T))))
summary_f <- function(x, f){
y = f(x, na.rm = T)
true(y)
}
summary_f(10:40, mean)
summary_f <- function(x, f){
y = f(x, na.rm = T)
true(y)
}
summary_f(10:40, mean)
summary_f <- function(x, FUN = f){
y = f(x, na.rm = T)
true(y)
}
summary_f(10:40, FUN = mean)
outliers_summary <- melt_continuas %>% dplyr::group_by(variable) %>% na.omit %>%
summarise(across(everything(), ~ summary_f(.x, na.rm = TRUE)))
outliers_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ summary_f(.x, na.rm = TRUE)))
outliers_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE)))
outliers_summary
summary_f <- function(x, f = FUN){
return(f(x))
}
summary_f(10:40, mean)
mean(10:40)
help(quantile)
summary_f <- function(x, f = FUN, p = NULL){
if(is.null(p)){return(f(x, na.rm = T))} else {return(f(x, na.rm = T, probs  = p))}
}
summary_f(10, quantile, 0.25)
summary_f(10:100, quantile, 0.25)
summary_f(1:100, quantile, 0.25)
mean_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(
mean = summary_f(mean)
)))
mean_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(
mean = summary_f()
)))
mean_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE)))
sd_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ sd(.x, na.rm = TRUE)))
q2_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ quantile(.x, na.rm = TRUE, 0.5)))
q1_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ quantile(.x, na.rm = TRUE, 0.25)))
q3_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ quantile(.x, na.rm = TRUE, 0.75)))
q1_out
q3_out
q2_out
q3_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ q3 = quantile(.x, na.rm = TRUE, 0.75)))
q3_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), q3 = ~ quantile(.x, na.rm = TRUE, 0.75)))
q3_out <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), ~ quantile(.x, na.rm = TRUE, 0.75)))
mean_f <- function(x){
return(mean(x, na.rm =T))
}
sd_f <- function(x){
return(sd(x, na.rm =T))
}
q1_f  <- function(x){
return(quantile(x, na.rm =T, 0.25))
}
q2_f  <- function(x){
return(quantile(x, na.rm =T, 0.5))
}
q3_f  <- function(x){
return(quantile(x, na.rm =T, 0.75))
}
out_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(
mean = mean_f,
sd = sd_f,
q1 = q1_f,
q2 = q2_f,
q3 = q3_f)))
out_summary
out_summary$group = "outliers"
no.outliers_summary <- out_summary
df_1 = df_2 = dataset_continuas[,k]
df_1
k = 1
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
df_2
no.outliers_summary$value_mean[k] = mean_f(df_2[,1])
df_2[,1]
no.outliers_summary$value_mean[k] = mean_f(as.numeric(df_2[,1]))
return(mean(x, na.rm =T))
mean_f <- function(x){
return(mean(x, na.rm =T))
}
sd_f <- function(x){
return(sd(x, na.rm =T))
}
q1_f  <- function(x){
return(quantile(x, na.rm =T, 0.25))
}
q2_f  <- function(x){
return(quantile(x, na.rm =T, 0.5))
}
q3_f  <- function(x){
return(quantile(x, na.rm =T, 0.75))
}
out_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(
mean = mean_f,
sd = sd_f,
q1 = q1_f,
q2 = q2_f,
q3 = q3_f)))
out_summary$group = "outliers"
no.outliers_summary <- out_summary
no.outliers_summary$value_mean[k] = mean_f(as.numeric(df_2[,1]))
as.numeric(df_2[,1])
df_2[,1]
no.outliers_summary$value_mean[k] = mean_f(data.frame(df_2[,1]))
as.numeric(df_2[,1])
df_2[,1]
no.outliers_summary$value_mean[k]
ean_f(df_2[,1])
no.outliers_summary$value_mean[k] = mean_f(as.numeric(df_2[,1]))
no.outliers_summary$value_mean[k] = mean_f(as.numeric(df_2$ingreso2))
colnames(df_2) = c(x, "group")
no.outliers_summary$value_mean[k] = mean_f(x))
no.outliers_summary$value_mean[k] = mean_f(x)
no.outliers_summary$value_mean[k] = mean_f(df_2x)
no.outliers_summary$value_mean[k] = mean_f(df_2$x)
colnames(df_2) = c(x, "group")
no.outliers_summary$value_mean[k] = mean_f(df_2$x)
ean_f(df_2[,1])
df_2[,1]
df_2$x
df_2 = df_2[,c(1,3)]
colnames(df_2) = c(x, "group")
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
k = 1
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c(x, "group")
no.outliers_summary$value_mean[k] = mean_f(df_2$x)
df_2$x
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c("x", "group")
no.outliers_summary$value_mean[k] = mean_f(df_2$x)
no.outliers_summary$value_mean[k] = mean_f(df_2$x)
no.outliers_summary$value_sd[k] = sd_f(df_2$x)
no.outliers_summary$value_q1[k] = q1_f(df_2$x)
no.outliers_summary$value_q2[k] = q2_f(df_2$x)
no.outliers_summary$value_q3[k] = q3_f(df_2$x)
no.outliers_summary
View(no.outliers_summary)
no.outliers_summary$group = "no-outliers"
whole_out <- rbind(out_summary, no.outliers_summary)
whole_out
kable(whole_out[,1:6], format = "latex", booktabs = T,
col.names = c(" ", "Variable", "Mean",
"SD", "Q1", "Q2", "Q3")) %>%
pack_rows(index = table(whole_out$group))
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
df_2
sd(df_2$x)
sd(df_2$x, T)
sd(df_2$x, na.rm = T)
colnames(df_2) = c("x", "group")
sd(df_2$x, na.rm = T)
sd(df_1$ingreso2, na.rm = T)
out_summary <- melt_continuas %>% dplyr::group_by(variable) %>%
summarise(across(everything(), list(
mean = mean_f,
sd = sd_f,
q1 = q1_f,
q2 = q2_f,
q3 = q3_f)))
v
out_summary
out_summary$group = "outliers"
no.outliers_summary <- out_summary
for (k in 1:5) {
df_1 = df_2 = dataset_continuas[,k]
df_2$z = as.vector(scale(df_1[,1]))
df_2 = df_2 %>% filter(abs(z) <= 3)
df_1$group = "outliers"
df_2$group = "no-outliers"
df_2 = df_2[,c(1,3)]
colnames(df_2) = c("x", "group")
no.outliers_summary$value_mean[k] = mean_f(df_2$x)
no.outliers_summary$value_sd[k] = sd_f(df_2$x)
no.outliers_summary$value_q1[k] = q1_f(df_2$x)
no.outliers_summary$value_q2[k] = q2_f(df_2$x)
no.outliers_summary$value_q3[k] = q3_f(df_2$x)
}
no.outliers_summary
no.outliers_summary$group = "no-outliers"
whole_out <- rbind(out_summary, no.outliers_summary)
whole_out
kable(whole_out[,1:6], format = "latex", booktabs = T,
col.names = c(" ", "Mean",
"SD", "Q1", "Q2", "Q3")) %>%
pack_rows(index = table(whole_out$group))
knitr::opts_chunk$set(echo = FALSE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
paste0("\n \\", "tiny","\n\n", x, "\n\n \\normalsize")
})
library(tibble)
library (kableExtra)
library(plyr)
library(tidyverse)
library(reshape2)
plot_cat <- readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
plot_cat
count_prop <- tibble(readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/count_prop.rds"))
count_prop <- count_prop %>% dplyr::filter(!is.na(value))
count_prop <- count_prop %>% dplyr::filter(name %in% c("actividad",
"edu",
"cotiza_fondo"))
count_prop$name <-  revalue(factor(count_prop$name),
c("actividad"="Actividad económica", "edu" = "Educación",
"cotiza_fondo" = "Fondo de pensiones"))
#count_prop$value = substr(count_prop$value, 1, 35)
count_prop$Share = round(count_prop$Share, 2)
kable(count_prop[,2:ncol(count_prop)], format = "latex", booktabs = T,
col.names = c(" ", "N", "Proporción (%)")) %>%
pack_rows(index = table(count_prop$name))
plot_dic <- readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_dic.rds")
plot_dic
dataset <- readxl::read_excel("geih_dataset.xlsx")
ggplot(data = dataset) +
geom_histogram(mapping = aes(x = ingreso/1000, col = ingreso),
fill = "lightskyblue", col = "black",
binwidth = 400) + xlim(c(0, 15000))  + theme_bw()
count = dataset %>% count(cut_width(ingreso/1000, 1000, boundary = 0, dig.lab = 6),
name = "n") %>% t()
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
melt_continuas <- melt(dataset_continuas)
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
knitr::opts_chunk$set(echo = FALSE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
paste0("\n \\", "tiny","\n\n", x, "\n\n \\normalsize")
})
library(tibble)
library (kableExtra)
library(plyr)
library(tidyverse)
library(reshape2)
plot_cat <- readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_cat.rds")
plot_cat
count_prop <- tibble(readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/count_prop.rds"))
count_prop <- count_prop %>% dplyr::filter(!is.na(value))
count_prop <- count_prop %>% dplyr::filter(name %in% c("actividad",
"edu",
"cotiza_fondo"))
count_prop$name <-  revalue(factor(count_prop$name),
c("actividad"="Actividad económica", "edu" = "Educación",
"cotiza_fondo" = "Fondo de pensiones"))
#count_prop$value = substr(count_prop$value, 1, 35)
count_prop$Share = round(count_prop$Share, 2)
kable(count_prop[,2:ncol(count_prop)], format = "latex", booktabs = T,
col.names = c(" ", "N", "Proporción (%)")) %>%
pack_rows(index = table(count_prop$name))
plot_dic <- readRDS("C:/Users/Portatil/Desktop/Curso_EDA_2024_I/Módulos/Módulo 2/Figuras/plot_dic.rds")
plot_dic
dataset <- readxl::read_excel("geih_dataset.xlsx")
ggplot(data = dataset) +
geom_histogram(mapping = aes(x = ingreso/1000, col = ingreso),
fill = "lightskyblue", col = "black",
binwidth = 400) + xlim(c(0, 15000))  + theme_bw()
count = dataset %>% count(cut_width(ingreso/1000, 1000, boundary = 0, dig.lab = 6),
name = "n") %>% t()
# Resumen descriptivo total
dataset_continuas = dataset[c("ingreso2",
"edad", "horas_semana",
"t_actual", "t_viaje")]
dataset
head(dataset)
out_summary
whole_out
whole_out
