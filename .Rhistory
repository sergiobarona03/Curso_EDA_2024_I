#----------------------#
# Cargar base de datos #-------------------------------------------------------------------------------------------------------------------------
#----------------------#
setwd("C:/Users/PC/Desktop/Nuevo_Curso_2024I")
dataset <- readxl::read_excel("Datos/Formatos/geiih_dataset.xlsx")
dataset <- readxl::read_excel("Datos/Formatos/geih_dataset.xlsx")
#----------------------#
# Cargar base de datos #-------------------------------------------------------------------------------------------------------------------------
#----------------------#
setwd("C:/Users/PC/Desktop/Curso_EDA_2024_I")
dataset <- readxl::read_excel("Datos/Formatos/geih_dataset.xlsx")
# Create a bar graph with cyl_gear_data
# as the data source
# Define the x-axis as gear,
# y-axis as mean_mpg, and fill as cyl
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~cyl, ncol = 2)
# Load the ggplot2 package
library(ggplot2)
# Create a bar graph with cyl_gear_data
# as the data source
# Define the x-axis as gear,
# y-axis as mean_mpg, and fill as cyl
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~cyl, ncol = 2)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~cyl, ncol = 2)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~area, ncol = 2)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~area, ncol = 4)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~area, ncol = 5)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~area, ncol = 5)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(area))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1)) +
facet_wrap(~area, ncol = 5)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(edu))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1)) +
facet_wrap(~area, ncol = 5)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(edu))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
labs(x = "Gear", y = "Mean MPG") +
ggtitle("Mean MPG by Gear and Number of Cylinders") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank()) +
facet_wrap(~area, ncol = 5)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(edu))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum)*100)),
position = "dodge"
) +
labs(x = "Nivel de educación máxima", y = "Proporción") +
ggtitle("Nivel de educación según área metropolitana") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank()) +
facet_wrap(~area, ncol = 5)
knitr::opts_chunk$set(echo = FALSE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
paste0("\n \\", "tiny","\n\n", x, "\n\n \\normalsize")
})
ggplot(dataset,
aes(x = factor(edu),
fill = factor(edu))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum)*100)),
position = "dodge"
) +
labs(x = "Nivel de educación máxima", y = "Proporción (%)") +
ggtitle("Nivel de educación según área metropolitana") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
facet_wrap(~area, ncol = 5)
ggplot(dataset,
aes(x = factor(edu),
fill = factor(edu))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum)*100)),
position = "dodge"
) +
labs(x = "Nivel de educación máxima", y = "Proporción (%)") +
ggtitle("Nivel de educación según área metropolitana") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
facet_wrap(~area, ncol = 5) +  labs(fill = "")
ggplot(dataset,
aes(x = factor(edu),
fill = factor(edu))) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum)*100)),
position = "dodge"
) +
labs(x = "Nivel de educación máxima", y = "Proporción (%)") +
ggtitle("Nivel de educación según área metropolitana") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks = element_blank()) +
facet_wrap(~area, ncol = 5) +  labs(fill = "Nivel")
# Lo mismo puede ser aplicado para las variables con pocas categorías
diam <- diamonds; setDT(diam)
tabulated <- diam[, .N, by = .(cut, color, clarity)]
# Lo mismo puede ser aplicado para las variables con pocas categorías
diam <- diamonds; setDT(diam)
# Lo mismo puede ser aplicado para las variables con pocas categorías
diam <- diamonds; setDT(diam)
library(data.table)
diam <- diamonds; setDT(diam)
tabulated <- diam[, .N, by = .(cut, color, clarity)]
tabulated
dat <- read.table(text = "Seasons Frequency1  Frequency2
DJF      497        500
JJA      999        700
MAM      695        2000
SON      245        1000", header = TRUE)
melt(data)
x = reshape2::melt(data)
x
dat <- read.table(text = "Seasons Frequency1  Frequency2
DJF      497        500
JJA      999        700
MAM      695        2000
SON      245        1000", header = TRUE)
x = reshape2::melt(dat)
x
count_cat <- dataset %>% select(sexo, cambiar, estable,
arl, caja, cotiza_fondo)
library(tidyverse)
count_cat <- dataset %>% select(sexo, cambiar, estable,
arl, caja, cotiza_fondo)
count_cat <- dataset %>% select(sexo, cambiar, estable,
arl, caja, cotiza_fondo) %>% count()
count_cat
count_cat <- dataset %>% count(sexo, cambiar, estable,
arl, caja, cotiza_fondo)
v
count_cat
count_cat <- dataset %>% count(sexo, cambiar, estable,arl, caja, cotiza_fondo) %>% reshape2::melt()
count_cat
count_cat <- dataset %>% count(sexo, cambiar, estable,arl, caja, cotiza_fondo) %>% reshape2::melt("value")
melt_count_cat <- melt(count_cat, id.vars = c("value"))
count_cat <- dataset %>% count(sexo, cambiar, estable,arl, caja, cotiza_fondo)
melt_count_cat <- melt(count_cat, id.vars = c("value"))
melt_count_cat <- melt(count_cat)
melt_count_cat <- reshape2::melt(count_cat, id.vars = c("value"))
melt_count_cat <- reshape2::melt(count_cat)
melt_count_cat
dat2 <- melt(dat)
dat2 <- reshape2::melt(dat)
dat2
dat
